on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of release'
        required: true
        default: 'testing'
      platforms:
        description: 'Platforms used to build'
        required: true
        default: 'linux/amd64,linux/arm64'
      publish:
        description: 'Pushed the docker image and publish the binary'
        required: true
        default: false

name: Release catapulte version

jobs:
  # variables:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version: ${{ steps.version.outputs.version }}
  #   steps:
  #     - name: compute version
  #       id: version
  #       run: echo "version=$(echo ${GITHUB_REF} | cut -d 'v' -f 2)" >> $GITHUB_OUTPUT


  build-alpine:
    runs-on: ubuntu-latest
    # needs: variables
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ github.event.inputs.platforms }}

      - name: build and push alpine
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./alpine.Dockerfile
          platforms: ${{ github.event.inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event.inputs.publish }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ github.event.inputs.version }}-alpine
          # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ needs.variables.outputs.version }}-alpine

  build-debian:
    runs-on: ubuntu-latest
    # needs: variables
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: ${{ github.event.inputs.platforms }}

      - name: build and push debian
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ github.event.inputs.platforms }}
          push: ${{ github.event.inputs.publish }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ github.event.inputs.version }},${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ github.event.inputs.version }}-debian
          # tags: ${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ needs.variables.outputs.version }},${{ secrets.DOCKER_HUB_USERNAME }}/catapulte:${{ needs.variables.outputs.version }}-debian
